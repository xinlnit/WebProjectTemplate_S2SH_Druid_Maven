<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
            http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">


	<!-- 注解配置 -->
	<context:component-scan base-package="com.xininit" />
	
	<!-- 整合hibernate -->
	
	<!-- 设置dataSource,使用Druid连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/my_tmp_db"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>
	</bean>
	<!-- 加入sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan"  value="com.xininit.pojo"></property>
		<property name="hibernateProperties">
			<props>
				<!-- 自动创建不存在的表和字段 -->
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<!-- 输出SQL -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 格式化输出SQL -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- 设置方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!--
				    thread:使用connection，用于单数据库连接事物管理
					jta:(java transaction api)运行时需要application server提供支持，它主要用于多数据库，分布式事物管理，用于界定事物边界。 
				-->
				<prop key="current_session_context_class">thread</prop>
			</props>
		</property>
	</bean>
</beans>